FORMAT: 1A

# Defence Request App Internal API
Defence Request Auth App Internal API's

## Authorization
Access tokens are obtained by signing User in using OAuth.

Access tokens must be passed for each request in an Authorization header.

A missing Authorization Header or invalid Authorization Token value for a protected endpoint will result in a 401 response

## Paging
Every collection response will include a links object.

The Links Object should contain links to both the first and last pages, optionally with next and previous links

## Linking
Each object returned by the API can have a \"links\" child object that contains API urls to related objects

# Group API Root [/]

This resource does not have any attributes. Instead it offers the initial API affordances in the form of the links in the JSON body.

It is recommended to follow the “url” link values, [Link](https://tools.ietf.org/html/rfc5988) or Location headers where applicable to retrieve resources. Instead of constructing your own URLs, to keep your client decoupled from implementation details. We will use link values for all collection responses.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "organisations_url": "/api/v1/organisations",
            "users_url": "/api/v1/users"
        }

# Group Organisations
Organisations are logical groups of users, and can be filtered by one or more types.

## Organisations Collection [/api/v1/organisations?uids[]=xxx&types[]=xxx]

### List all Organisations [GET]
+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Parameters
    + uids (array[uuid], optional) - Organisation UIDs to load
    + types (array[string], optional) - Params array of Organisation types to filter by
        + Members
            + `custody_suite`
            + `call_centre`
            + `law_firm`
            + `law_office`

+ Response 200 (application/json)

        {
            "organisations:" [
                {
                    "uid": "1234567890abcdef",
                    "name": "Tuckers",
                    "type": "law_firm",
                    "parent_organisation_uid": null,
                    "sub_organisation_uids": [],
                    "links": {
                        "profiles": "/api/v1/profiles?uids[]=1a2b3c&uids[]=4d5e6f&uids[]=a1b2c3",
                        "parent_organisation": null,
                        "sub_organisations": null
                    }
                },
                {
                    "uid": "0987654321fedcba",
                    "name": "Brighton",
                    "type": "custody_suite",
                    "parent_organisation_uid": "3c3aedd3",
                    "sub_organisation_uids": ["4eb3dc", "a5b2ecc"],
                    "links": {
                        "profiles": null,
                        "parent_organisation": "/api/v1/organisation/3c3aedd3",
                        "sub_organisations": "/api/v1/organisations?uids[]=4eb3dc&uids[]=a5b2ecc"
                    }

                }
            ],
            "links": {
                "first": "/api/v1/organisations",
                "previous": "/api/v1/organisations?page=1",
                "next": "/api/v1/organisations?page=2",
                "last": "/api/v1/organisations?page=3"
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

## Organisation [/api/v1/organisations/{uid}]
A single Organisation with all its details.

### Single Organisation [GET]

+ Parameters
    + uid (uuid, required) - UID of the organisation

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Response 200 (application/json)

        {
            "organisation": {
                "uid": "1234567890abcdef",
                "name": "Tuckers",
                "type": "law_firm",
                "parent_organisation_uid": "3c3aedd3",
                "sub_organisation_uids": ["4eb3dc", "a5b2ecc"],
                "links": {
                    "profiles": "/api/v1/profiles?uids[]=1a2b3c&uids[]=4d5e6f&uids[]=a1b2c3",
                    "parent_organisation": "/api/v1/organisation/3c3aedd3",
                    "sub_organisations": "/api/v1/organisations?uids[]=4eb3dc&uids[]=a5b2ecc"
                }
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

# Group Users
Users of people that may or may not have a login.

## Users Collection [/api/v1/users?uids[]=xxx&types[]=xxx]
### List all Users [GET]
+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Parameters
    + uids (array[uuid], optional) - Profile UIDs to load
    + types (array[string], optional) - Profile types to filter by
        + Members
            + `solicitor`
            + `agent`

+ Response 200 (application/json)

        {
            "users:" [
                {
                    "uid": "1a2b3c",
                    "name": "Bob Smith",
                    "type": "solicitor",
                    "links": {
                        "organisation": "/api/v1/organisations/1234567890abcdef"
                    }
                },
                {
                    "uid": "4d5e6f",
                    "name": "Andy Brown",
                    "type": "agent",
                    "links": {
                        "organisation": "/api/v1/organisations/2345678901bcdefa"
                    }
                }
            ],
            "links": {
                "first": "/api/v1/users",
                "previous": "/api/v1/users?page=1",
                "next": "/api/v1/users?page=2",
                "last": "/api/v1/users?page=3"
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

## User [/api/v1/users/{uid}]
A single User with all its details

+ Parameters
    + uid (uuid, required) - UID of the User

### Single User [GET]
+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Response 200 (application/json)

        {
            "user": {
                "uid": "1a2b3c",
                "name": "Bob Smith",
                "type": "solicitor",
                "links": {
                    "organisation": "/api/v1/organisations/1234567890abcdef"
                }
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

## User Search [/api/v1/users/search?q=xxx]
Search Users on Name

### User Matches [GET]

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Parameters
    + q (string, optional) - query string

+ Response 200 (application/json)

        {
            "users": [
                {
                    "uid": "1a2b3c",
                    "name": "Bob Smith",
                    "type": "solicitor",
                    "links": {
                        "organisation": "/api/v1/organisations/1234567890abcdef"
                    }
                }
            ],
            "links": {
                "first": "/api/v1/users/search?q=xxx",
                "previous": "/api/v1/users/search?q=xxx&page=1",
                "next": "/api/v1/users/search?q=xxx&page=2",
                "last": "/api/v1/users/search?q=xxx&page=3"
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

## User Profile [/api/v1/me]
Returns Profile object for the user identified by the Authorization Header.

Used by consuming Applications to populate `current_user`.

Note: Roles returned in this response only apply in the context of the calling Application. Roles that apply to other Applications will not be returned.

### Single User Profile [GET]
+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer <TOKEN>

+ Response 200 (application/json)

        {
            "user": {
                "uid": "1a2b3c",
                "name": "Bob Smith",
                "email": "bob.smith@world.com",
                "telephone": "0123456789",
                "mobile": "071234567",
                "address": {
                    "full_address": ""
                    "postcode": ""
                },
                "organisations": [
                    {
                        "uid": "234fs243sfsfsf",
                        "name": "PBV Solicitors",
                        "type": "law_firm",
                        "roles": ["solicitor"]
                    }
                ]
            }
        }

+ Response 401 (application/json)

        {
            "errors": [
                "You must provide a valid Authorization Token"
            ]
        }

